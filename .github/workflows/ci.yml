name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  check:
    name: Check, Lint and Test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: cargo-binstall
      uses: cargo-bins/cargo-binstall@main

    - name: install cargo utilities
      run: |
        cargo binstall cargo-rdme
        cargo binstall cargo-nextest

    - name: Check formatting
      run: cargo fmt --all -- --check

    - name: Run clippy
      # run: cargo clippy --all-features -- -D warnings
      run: cargo clippy --all-features

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo nextest run --verbose

    - name: Run doc tests
      run: cargo test --doc

    - name: Run test for minimal example
      run: cd examples/minimal && cargo nexttest run --no-capture

    - name: Readme check
      run: cargo rdme --check

  test-on-multiple-os:
    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

    - name: cargo-binstall
      uses: cargo-bins/cargo-binstall@main

    - name: install cargo utilities
      run: |
        cargo binstall cargo-rdme
        cargo binstall cargo-nextest

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo nextest run --verbose

    - name: Run test for minimal example
      run: cd examples/minimal && cargo nextest run --no-capture
